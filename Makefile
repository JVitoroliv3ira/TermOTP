VERSION := $(shell git describe --tags --always || echo "dev")

BINARY_NAME = totp

BUILD_DIR = build

PLATFORMS = linux/amd64 darwin/amd64 windows/amd64

LDFLAGS = -X 'github.com/JVitoroliv3ira/termotp/internal/version.Version=$(VERSION)'

.DEFAULT_GOAL := help

help:
	@echo "Comandos dispon√≠veis:"
	@echo "  make test         - Executa os testes da aplica√ß√£o"
	@echo "  make build        - Compila o projeto para a plataforma atual"
	@echo "  make release      - Compila bin√°rios para Linux, macOS e Windows"
	@echo "  make build-linux  - Compila o bin√°rio para Linux"
	@echo "  make build-mac    - Compila o bin√°rio para macOS"
	@echo "  make build-win    - Compila o bin√°rio para Windows"
	@echo "  make clean        - Remove os bin√°rios compilados"
	@echo "  make version      - Exibe a vers√£o atual do projeto"

test:
	go test -v -cover ./...

build:
	@echo "üöÄ Compilando TermOTP vers√£o $(VERSION)..."
	mkdir -p $(BUILD_DIR)
	go build -ldflags "$(LDFLAGS)" -o $(BUILD_DIR)/$(BINARY_NAME)
	@echo "‚úÖ Build conclu√≠do: $(BUILD_DIR)/$(BINARY_NAME)"

build-linux:
	@echo "üêß Compilando para Linux..."
	mkdir -p $(BUILD_DIR)
	GOOS=linux GOARCH=amd64 go build -ldflags "$(LDFLAGS)" -o $(BUILD_DIR)/$(BINARY_NAME)-linux-amd64
	@echo "‚úÖ Build para Linux conclu√≠do: $(BUILD_DIR)/$(BINARY_NAME)-linux-amd64"

build-mac:
	@echo "üçè Compilando para macOS..."
	mkdir -p $(BUILD_DIR)
	GOOS=darwin GOARCH=amd64 go build -ldflags "$(LDFLAGS)" -o $(BUILD_DIR)/$(BINARY_NAME)-macos-amd64
	@echo "‚úÖ Build para macOS conclu√≠do: $(BUILD_DIR)/$(BINARY_NAME)-macos-amd64"

build-win:
	@echo "üñ•Ô∏è Compilando para Windows..."
	mkdir -p $(BUILD_DIR)
	GOOS=windows GOARCH=amd64 go build -ldflags "$(LDFLAGS)" -o $(BUILD_DIR)/$(BINARY_NAME)-windows-amd64.exe
	@echo "‚úÖ Build para Windows conclu√≠do: $(BUILD_DIR)/$(BINARY_NAME)-windows-amd64.exe"

release: clean
	@echo "üöÄ Criando release para vers√£o $(VERSION)..."
	mkdir -p $(BUILD_DIR)
	$(foreach platform, $(PLATFORMS), \
		$(eval GOOS=$(word 1,$(subst /, ,$(platform)))) \
		$(eval GOARCH=$(word 2,$(subst /, ,$(platform)))) \
		echo "üîπ Compilando para $(GOOS)/$(GOARCH)..." && \
		GOOS=$(GOOS) GOARCH=$(GOARCH) go build -ldflags "$(LDFLAGS)" -o $(BUILD_DIR)/$(BINARY_NAME)-$(GOOS)-$(GOARCH)$(if $(filter windows,$(GOOS)),.exe,); \
	)
	@echo "‚úÖ Todos os bin√°rios foram gerados em $(BUILD_DIR)/"

clean:
	@echo "üßπ Removendo arquivos de build..."
	rm -rf $(BUILD_DIR)
	@echo "‚úÖ Build limpo!"

version:
	@echo "üîπ TermOTP - Vers√£o $(VERSION)"
